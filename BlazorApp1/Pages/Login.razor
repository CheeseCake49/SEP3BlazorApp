@page "/Login"
@using BlazorApp1.Services.Http
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <NotAuthorized>
            <div class="card">
                <h3>Please login</h3>
                <form @onsubmit="LoginAsync">
                    <div class="field">
                        <label>Username:</label>
                        <input type="text" @bind="userName" />
                    </div>
                    <div class="field">
                        <label style="text-align: center">Password:</label>
                        <input type="password" @bind="password" />
                    </div>
                    <div class="field">
                        <p>No account? <a href="/createuser" style="color: #1861ac; font-weight: bold;">Register now</a></p>
                    </div>
                    @if (!string.IsNullOrEmpty(errorLabel))
                    {
                        <div class="field">
                            <label style="color: red">
                                @errorLabel
                            </label>
                        </div>
                    }
                    <div class="field">
                        <button type="submit" class="loginbtn">Log in</button>
                    </div>
                </form>
            </div>
        </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name!</h3>
            <div class="mt-4" />
            <p>You're currently logged in. Want to <a href="#" @onclick="Logout" style="font-weight: bold; color: #1861ac;">logout</a>?</p>
            </div>
    </Authorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(userName, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
    private async Task Logout()
    {
        await authService.LogoutAsync();
        navMgr.NavigateTo("/"); 
    }
    

}